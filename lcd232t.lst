CCS PCM C Compiler, Version 4.140, 31805               25-fev-14 11:37

               Filename:   D:\Eletronica\Projetos\LCD232\lcd232t.lst

               ROM used:   161 words (8%)
                           Largest free fragment is 1887
               RAM used:   48 (21%) at main() level
                           50 (22%) worst case
               Stack:     1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  MOVLW  8C
001B:  MOVWF  04
001C:  BTFSS  00.5
001D:  GOTO   020
001E:  BTFSC  0C.5
001F:  GOTO   049
0020:  MOVLW  8C
0021:  MOVWF  04
0022:  BTFSS  00.0
0023:  GOTO   026
0024:  BTFSC  0C.0
0025:  GOTO   037
0026:  MOVF   22,W
0027:  MOVWF  04
0028:  MOVF   23,W
0029:  MOVWF  77
002A:  MOVF   24,W
002B:  MOVWF  78
002C:  MOVF   25,W
002D:  MOVWF  79
002E:  MOVF   26,W
002F:  MOVWF  7A
0030:  MOVF   27,W
0031:  MOVWF  0A
0032:  SWAPF  21,W
0033:  MOVWF  03
0034:  SWAPF  7F,F
0035:  SWAPF  7F,W
0036:  RETFIE
.................... /* 
....................  * lcd232.c 
....................  * 
....................  *  Created on: 01/10/2012 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
.................... #zero_ram 
....................  
.................... #fuses NOWDT,NOPUT,INTRC_IO,MCLR,NOBROWNOUT,NOLVP,NOCPD,NOPROTECT 
.................... #use delay(clock=4MHz) 
.................... #use rs232(baud=9600,xmit=pin_b2,rcv=pin_b1) 
....................  
.................... int buffer[34]; 
.................... int line = 0; 
....................  
.................... #INT_TIMER1 
.................... void isr_timer1() { 
.................... 	clear_interrupt(INT_TIMER1); 
0037:  BCF    0C.0
.................... 	setup_timer_1(T1_DISABLED); 
0038:  CLRF   10
.................... 	for (line = 0; line < 32; line++) { 
0039:  CLRF   4A
003A:  MOVF   4A,W
003B:  SUBLW  1F
003C:  BTFSS  03.0
003D:  GOTO   045
.................... 		buffer[line] = '\0'; 
003E:  MOVLW  28
003F:  ADDWF  4A,W
0040:  MOVWF  04
0041:  BCF    03.7
0042:  CLRF   00
.................... 	} 
0043:  INCF   4A,F
0044:  GOTO   03A
.................... 	line = 0; 
0045:  CLRF   4A
.................... } 
....................  
0046:  BCF    0C.0
0047:  BCF    0A.3
0048:  GOTO   026
.................... #int_rda 
.................... void serial_isr() { 
.................... 	clear_interrupt(INT_RDA); 
0049:  BCF    0C.5
.................... 	buffer[line++] = getc(); 
004A:  MOVF   4A,W
004B:  INCF   4A,F
004C:  ADDLW  28
004D:  MOVWF  04
004E:  BCF    03.7
004F:  BTFSS  0C.5
0050:  GOTO   04F
0051:  MOVF   1A,W
0052:  MOVWF  00
.................... 	buffer[line] = '\0'; 
0053:  MOVLW  28
0054:  ADDWF  4A,W
0055:  MOVWF  04
0056:  BCF    03.7
0057:  CLRF   00
.................... 	set_timer1(0); 
0058:  CLRF   0F
0059:  CLRF   0E
.................... 	setup_timer_1(T1_INTERNAL | T1_DIV_BY_1); 
005A:  MOVLW  85
005B:  MOVWF  10
.................... } 
....................  
005C:  BCF    0C.5
005D:  BCF    0A.3
005E:  GOTO   026
.................... int main(void) { 
005F:  MOVF   03,W
0060:  ANDLW  1F
0061:  MOVWF  03
0062:  MOVLW  57
0063:  MOVWF  77
0064:  MOVLW  20
0065:  MOVWF  04
0066:  BCF    03.7
0067:  CLRF   00
0068:  INCF   04,F
0069:  DECFSZ 77,F
006A:  GOTO   067
006B:  CLRF   78
006C:  CLRF   79
006D:  CLRF   7A
006E:  CLRF   7B
006F:  CLRF   7C
0070:  CLRF   7D
0071:  CLRF   7E
0072:  MOVLW  50
0073:  MOVWF  77
0074:  MOVLW  A0
0075:  MOVWF  04
0076:  BCF    03.7
0077:  CLRF   00
0078:  INCF   04,F
0079:  DECFSZ 77,F
007A:  GOTO   077
007B:  MOVLW  30
007C:  MOVWF  77
007D:  MOVLW  20
007E:  MOVWF  04
007F:  BSF    03.7
0080:  CLRF   00
0081:  INCF   04,F
0082:  DECFSZ 77,F
0083:  GOTO   080
0084:  BCF    03.7
0085:  CLRF   20
0086:  CLRF   04
0087:  BCF    03.7
0088:  MOVLW  1F
0089:  ANDWF  03,F
008A:  BSF    03.5
008B:  BSF    0E.3
008C:  MOVLW  19
008D:  MOVWF  19
008E:  MOVLW  A6
008F:  MOVWF  18
0090:  MOVLW  90
0091:  BCF    03.5
0092:  MOVWF  18
0093:  CLRF   4A
0094:  MOVLW  07
0095:  MOVWF  1F
....................  
.................... 	clear_interrupt(INT_TIMER1); 
0096:  BCF    0C.0
.................... 	enable_interrupts(INT_RDA); 
0097:  BSF    03.5
0098:  BSF    0C.5
.................... 	enable_interrupts(INT_TIMER1); 
0099:  BSF    0C.0
.................... 	enable_interrupts(GLOBAL); 
009A:  MOVLW  C0
009B:  BCF    03.5
009C:  IORWF  0B,F
....................  
.................... 	while (TRUE) { 
.................... 		; 
.................... 	} 
009D:  GOTO   09D
.................... 	return 0; 
009E:  MOVLW  00
009F:  MOVWF  78
.................... } 
00A0:  SLEEP

Configuration Fuses:
   Word  1: 3F38   NOWDT NOPUT INTRC_IO MCLR NOBROWNOUT NOLVP NOCPD NOPROTECT
